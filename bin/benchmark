#!/usr/bin/env php
<?php
declare(strict_types=1);

require __DIR__ . "/../app/bootstrap.php";

use DiContainerBenchmarks\Benchmark\Benchmark;
use DiContainerBenchmarks\Benchmark\WebBenchmarkContext;
use DiContainerBenchmarks\Container\Aura\AuraContainer;
use DiContainerBenchmarks\Container\Auryn\AurynContainer;
use DiContainerBenchmarks\Container\BnfDi\BnfDiContainer;
use DiContainerBenchmarks\Container\Cobalt\CobaltContainer;
use DiContainerBenchmarks\Container\Dice\DiceContainer;
use DiContainerBenchmarks\Container\Disco\DiscoContainer;
use DiContainerBenchmarks\Container\Joomla\JoomlaContainer;
use DiContainerBenchmarks\Container\Laravel\LaravelContainer;
use DiContainerBenchmarks\Container\OpulenceIoc\OpulenceIocContainer;
use DiContainerBenchmarks\Container\PhpDi\PhpDiContainer;
use DiContainerBenchmarks\Container\PHPixieDi\PHPixieDiContainer;
use DiContainerBenchmarks\Container\Pimple\PimpleContainer;
use DiContainerBenchmarks\Container\Symfony\SymfonyContainer;
use DiContainerBenchmarks\Container\Yaco\YacoContainer;
use DiContainerBenchmarks\Container\Yii2\Yii2Container;
use DiContainerBenchmarks\Container\Zen\ZenContainer;
use DiContainerBenchmarks\Container\ZendServiceManager\ZendServiceManagerContainer;
use DiContainerBenchmarks\OutputGenerator\HtmlOutputGenerator;
use DiContainerBenchmarks\TestSuite\TestSuite1;
use DiContainerBenchmarks\TestSuite\TestSuite2;
use DiContainerBenchmarks\TestSuite\TestSuite3;
use DiContainerBenchmarks\TestSuite\TestSuite4;
use DiContainerBenchmarks\TestSuite\TestSuite5;
use DiContainerBenchmarks\TestSuite\TestSuite6;

$testSuites = [
    new TestSuite1(),
    new TestSuite2(),
    new TestSuite3(),
    new TestSuite4(),
    new TestSuite5(),
    new TestSuite6(),
];

$containers = [
    new AuraContainer(),
    new AurynContainer(),
    new BnfDiContainer(),
    new CobaltContainer(),
    new DiceContainer(),
    new DiscoContainer(),
    new JoomlaContainer(),
    new LaravelContainer(),
    new OpulenceIocContainer(),
    new PhpDiContainer(),
    new PHPixieDiContainer(),
    new PimpleContainer(),
    new SymfonyContainer(),
    new YacoContainer(),
    new Yii2Container(),
    new ZenContainer(),
    new ZendServiceManagerContainer(),
];

$outputGenerators = [
    new HtmlOutputGenerator(PROJECT_ROOT . "/var/benchmark.html"),
];

// Validating if benchmark URL is correctly set
$benchmarkUrl = getenv("BENCHMARK_URL");
if (empty($argv[1]) === false) {
    $benchmarkUrl = $argv[1];
}
if ($benchmarkUrl === false) {
    echo "Either specify the 'BENCHMARK_URL' environment variable or pass it as a parameter!\n";
    exit(-1);
}

$benchmark = new Benchmark(new WebBenchmarkContext($benchmarkUrl));

if (isset($argv[1]) && $argv[1] === "build") {
    $benchmark->buildContainers($containers);
} else {
    sleep(2);
    $benchmark->runBenchmark($testSuites, $containers, $outputGenerators);
}
